 Creating a Database, Tables, and Inserting Data

In SQL, one of the first steps to working with data is creating a database and defining tables to store that data. Let’s go step by step through the process of creating a database, setting up a table, and inserting data into it.


Step 1: Creating a Database

To start, you need to create a database to store your tables and data. Here’s how you do it:


CREATE DATABASE CompanyDB;

This command creates a database named `CompanyDB`. After creating the database, you can switch to it using the `USE` command:


USE CompanyDB;

Step 2: Creating a Table

Once the database is ready, you can create a table to store specific data. For example, let’s create a table called `Employees`:

CREATE TABLE Employees (
    EmployeeID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    DateOfBirth DATE,
    Salary DECIMAL(10, 2)
);


Explanation of the syntax:
- EmployeeID INT AUTO_INCREMENT PRIMARY KEY: 
  - `EmployeeID` is an integer column that uniquely identifies each employee.
  - `AUTO_INCREMENT` ensures that this value automatically increases with each new row.
  - `PRIMARY KEY` makes sure this column uniquely identifies every record in the table.
- FirstName VARCHAR(50) and LastName VARCHAR(50):
  - `VARCHAR` stands for "variable character," which means it can store text strings. The number `50` sets the maximum length of the string.
- DateOfBirth DATE:
  - The `DATE` data type stores dates in the format `YYYY-MM-DD`.
- Salary DECIMAL(10, 2):
  - The `DECIMAL` data type stores numbers with decimal points. The `10, 2` means it can store numbers up to 10 digits in total, with 2 digits after the decimal point.


Step 3: Inserting Data

After creating the table, you can add data to it using the `INSERT INTO` command. For example:


||INSERT INTO Employees (FirstName, LastName, DateOfBirth, Salary)
VALUES ('John', 'Doe', '1990-05-15', 55000.00);||


- Here, we’re inserting a new employee named John Doe, born on May 15, 1990, with a salary of 55,000.00.
- You don’t need to specify `EmployeeID` because it’s `AUTO_INCREMENT`, and the database will generate it automatically.

You can add more records like this:

||INSERT INTO Employees (FirstName, LastName, DateOfBirth, Salary)
VALUES ('Jane', 'Smith', '1985-09-30', 65000.00);||

Data Types Explained

1. VARCHAR:
   - Used to store variable-length text strings (e.g., names, addresses).
   - Syntax: `VARCHAR(n)` where `n` is the maximum number of characters the column can hold.

2. AUTO_INCREMENT:
   - Automatically generates unique values for a column (usually used for primary keys).
   - Typically used with `INT` or `BIGINT` data types.

3. DATE:
   - Used to store date values in the format `YYYY-MM-DD`.
   - Useful for birth dates, order dates, or any time-related information.

4. DECIMAL:
   - Stores precise numeric values, especially when decimal points are important (e.g., for currency).
   - Syntax: `DECIMAL(m, d)` where `m` is the total number of digits and `d` is the number of digits after the decimal point.
